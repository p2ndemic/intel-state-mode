#!/bin/bash
# =============================================
# Wrapper to switch P-state profiles for applications/games
# =============================================
# Ref: https://docs.kernel.org/admin-guide/pm/intel_pstate.html
# Ref: https://www.clearlinux.org/clear-linux-documentation/guides/maintenance/cpu-performance.html
# Ref: https://docs.mesa3d.org/perf.html
# =============================================
# â†’ Installation:
# â†’ Create a file: sudo nano /usr/local/bin/intel-pstate-mode
# â†’ Make the script executable: sudo chmod +x /usr/local/bin/intel-pstate-mode
# =============================================
# â†’ Create systemd daemons:
# â†’ See: https://github.com/p2ndemic/dotfiles/tree/main/etc/systemd/system
# =============================================
# â†’ Enable default service for autostart:
# sudo systemctl enable --now intel-pstate-default.service && sudo systemctl daemon-reload
# =============================================
# â†’ Additional installation:
# â†’ Install thermald: sudo pacman -S thermald && systemctl enable --now thermald
# =============================================
# â†’ Remove power-profiles-daemon:
# sudo pacman -Rns power-profiles-daemon
# =============================================
# â†’ Install tuned:
# sudo pacman -S tuned && systemctl enable --now tuned
# =============================================
# â†’ Testing:
# â†’ Check current CPU power mode settings:
# cat /sys/devices/system/cpu/cpu*/cpufreq/scaling_driver | head -1
# cat /sys/devices/system/cpu/intel_pstate/status
# cat /sys/devices/system/cpu/cpu*/cpufreq/scaling_governor | head -1
# cat /sys/devices/system/cpu/cpu*/cpufreq/energy_performance_preference | head -1
# cat /sys/devices/system/cpu/intel_pstate/no_turbo
# cat /sys/devices/system/cpu/intel_pstate/hwp_dynamic_boost
# cat /sys/devices/system/cpu/intel_pstate/min_perf_pct
# cat /sys/devices/system/cpu/intel_pstate/max_perf_pct
# =============================================
# â†’ Test the helper script directly:
# intel-pstate-mode --p1 -- wine mygame
# intel-pstate-mode --p2 -- gamescope --rt --immediate-flips -w 1680 -h 1050 -W 2560 -H 1600 -f -r 120 --force-grab-cursor --mangoapp -- %command%
# intel-pstate-mode --p4 -- gamescope -w 1600 -h 900 -W 2560 -H 1600 -f -S fit -r 120 --force-grab-cursor --mangoapp -- %command%
# =============================================

# Function to show notification
show_notify() {
    local SUMMARY="$1"
    local BODY="$2"
    notify-send \
        --app-name="ðŸš€ intel-pstate-mode" \
        --expire-time=1000 \
        --urgency=normal \
        "$SUMMARY" \
        "$BODY"
}

# Function to show usage information
show_usage() {
    echo "Usage: $0 [OPTIONS] <command> [args...]"
    echo "Options:"
    echo "  --p0, --powersave-balance      Powersave mode with default energy preference (governor=powersave, epp=balance_performance, hwp_dynamic_boost=0)"
    echo "  --p1, --powersave-performance  Powersave mode with performance-focused energy preference (governor=powersave, epp=performance, hwp_dynamic_boost=0)"
    echo "  --p2, --performance-balance    Performance mode with balanced energy preference (governor=performance, epp=balance_performance, hwp_dynamic_boost=0)"
    echo "  --p3, --performance-max        Maximum performance mode (governor=performance, epp=performance, hwp_dynamic_boost=1)"
    echo "  --p4, --custom                 Use custom profile (with the settings from /etc/systemd/system/intel_pstate-cust.service)"
    echo "  --help                         Display this help message"
}

# Check for minimum required arguments
if [[ $# -lt 1 ]]; then
    show_usage
    exit 1
fi

# Initialize variables
MODE=$1
PROFILE_NAME=""
SERVICE=""

# Select profile
case "$MODE" in
    --p0|--powersave-balance)
        PROFILE_NAME="powersave-balance"
        SERVICE="intel-pstate-powersave-balance.service"
        shift
        ;;
    --p1|--powersave-performance)
        PROFILE_NAME="powersave-performance"
        SERVICE="intel-pstate-powersave-performance.service"
        shift
        ;;
    --p2|--performance-balance)
        PROFILE_NAME="performance-balance"
        SERVICE="intel-pstate-performance-balance.service"
        shift
        ;;
    --p3|--performance-max)
        PROFILE_NAME="performance-max"
        SERVICE="intel-pstate-performance-max.service"
        shift
        ;;
    --p4|--custom)
        PROFILE_NAME="custom"
        SERVICE="intel-pstate-custom.service"
        shift
        ;;
    --help)
        show_usage
        exit 0
        ;;
    *)
        echo "ERROR: Invalid profile option '$MODE'. Use --help for available options."
        exit 1
        ;;
esac

# Function to clean up on exit
profile_cleanup() {
    systemctl start intel-pstate-default.service
    show_notify "Profile Restored" "Restored default profile after application exit."
}

# Set trap to call cleanup on script exit
trap profile_cleanup EXIT

# Activate the selected profile
show_notify "Profile Activated" "Activated $PROFILE_NAME profile for performance tuning."
systemctl start "$SERVICE"

# Run the application. Use <exec> to replace the shell process with the application
exec "$@"
